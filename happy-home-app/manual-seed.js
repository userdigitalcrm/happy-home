const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient({
  log: ['query', 'info', 'warn', 'error'],
});

async function main() {
  console.log('üå± –ù–∞—á–∏–Ω–∞–µ–º —Ä—É—á–Ω–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
  
  try {
    // –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
    console.log('–°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏...');
    const categories = [
      { name: '1 –ö–æ–º', description: '1-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞' },
      { name: '2 –ö–æ–º', description: '2-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞' },
      { name: '3 –ö–æ–º', description: '3-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞' },
      { name: '4 –ö–æ–º', description: '4-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞' },
      { name: '5 –ö–æ–º', description: '5-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞' },
      { name: '6 –ö–æ–º', description: '6-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞' },
      { name: '–†–ò–≠–õ–¢–û–†', description: '–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å' },
    ];

    for (const categoryData of categories) {
      try {
        const category = await prisma.category.create({
          data: categoryData,
        });
        console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${category.name}`);
      } catch (error) {
        console.log(`‚ÑπÔ∏è  –ö–∞—Ç–µ–≥–æ—Ä–∏—è ${categoryData.name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞: ${error.message}`);
      }
    }

    // –°–æ–∑–¥–∞–µ–º —Ä–∞–π–æ–Ω—ã –ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫–∞
    console.log('–°–æ–∑–¥–∞–µ–º —Ä–∞–π–æ–Ω—ã –ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫–∞...');
    const districtNames = [
      '–í–æ–∫–∑–∞–ª', '–ü–æ–¥–≥–æ—Ä–∞', '–†–∞—Ö–º–µ—Ç', '20 –ú–∫—Ä', '–ö–æ–ª—Ö–æ–∑–Ω—ã–π', '–ë–µ–Ω–∑–æ—Å—Ç—Ä–æ–π',
      '2 –ì–æ—Ä –ë–æ–ª', '–°–∫–∏—Ñ', '–î–ë–°', '–í–í–ò', '–°–µ–≤–µ—Ä–Ω—ã–π', '–†–∞–±–æ—á–∏–π',
      '19 –ú–∫—Ä', '–ê–∑–∏—è', '–ë—É—Ä–∞—Ç–∏–Ω–æ', '–ì–æ—Ä–æ—Ç–¥–µ–ª', '–î–°–†', '–£—é—Ç',
      '–û–∫–µ–∞–Ω', '8 –®–∫–æ–ª–∞', '–î–û–ë', '–î–µ–ª—å—Ñ–∏–Ω', '17 –®–∫–æ–ª–∞', '–ù–æ–≤—ã–π –¶–û–¢',
      '–°–æ–∫–æ–ª', '–ê—Ç–ª–∞–Ω—Ç–∏–¥–∞', '–¢–∞–π–≥–∞', '–ë–µ—Ä—ë–∑–∫–∞', '3 –ì–æ—Ä –ë–æ–ª', '–ß–µ—Ä–µ–º—É—à–∫–∏',
      '–ö–∞–∑–∞—Ö—Ç–µ–ª–µ–∫–æ–º', '–ú–∞—Å—Ç–µ—Ä', '–¶–û–ù', '–î–æ—à–∫–æ–ª—å–Ω–∏–∫', '–†–∞—Ö–∞—Ç', '–ù–æ–≤–∞—è –ú–µ—á–µ—Ç—å',
      '–ë—ç—Å—Ç', '3 –ë–∞–Ω—è', '–°–ö–ì–£', '–ê—Ö—Ç–∞–º–∞—Ä', '–î–∏–Ω–∞–º–æ', '–†–∞–¥—É–∂–Ω—ã–π',
      '–ú—è—Å–æ–∫–æ–º–±–∏–Ω–∞—Ç', '–ë–æ—Ä–∫–∏', '–°—Ç–∞—Ä—Ç', '–î—Ä–∞–º –¢–µ–∞—Ç—Ä –ü–æ–≥–æ–¥–∏–Ω–∞', '–î–æ—Å—Ç—ã–∫ –ú–æ–ª–ª',
      '7 –®–∫–æ–ª–∞', '–ì–æ—Ä –ü–∞—Ä–∫'
    ];

    for (const name of districtNames) {
      try {
        const district = await prisma.district.create({
          data: { 
            name, 
            description: `${name} —Ä–∞–π–æ–Ω`,
            isActive: true
          }
        });
        console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ä–∞–π–æ–Ω: ${district.name}`);
      } catch (error) {
        console.log(`‚ÑπÔ∏è  –†–∞–π–æ–Ω ${name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞: ${error.message}`);
      }
    }

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ä–∞–π–æ–Ω—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∑–¥–∞–Ω–∏—è—Ö
    const districts = await prisma.district.findMany();
    console.log(`‚ÑπÔ∏è  –ù–∞–π–¥–µ–Ω–æ ${districts.length} —Ä–∞–π–æ–Ω–æ–≤`);
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–¥–∞–Ω–∏—è —Å —Å–ø—Ä–∞–≤–æ—á–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    console.log('–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–¥–∞–Ω–∏—è...');
    if (districts.length > 0) {
      const buildingData = {
        districtId: districts[0].id,
        street: '–ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞',
        houseNumber: '1',
        fullAddress: '–ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞, 1',
        yearBuilt: 1985,
        wallMaterial: '–ö–∏—Ä–ø–∏—á',
        layout: '–£–ª—É—á—à–µ–Ω–Ω–∞—è',
        totalFloors: 9,
        hasElevator: true,
        heatingType: '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–µ',
        confidenceLevel: 'HIGH',
        dataSource: 'base',
        isVerified: true,
        isActive: true
      };

      try {
        const building = await prisma.building.create({
          data: buildingData,
        });
        console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ –∑–¥–∞–Ω–∏–µ: ${building.fullAddress}`);
      } catch (error) {
        console.log(`‚ÑπÔ∏è  –ó–¥–∞–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞: ${error.message}`);
      }
    }

    // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    console.log('–°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');
    try {
      const adminUser = await prisma.user.create({
        data: {
          email: 'admin@happyhome.kz',
          name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
          role: 'ADMIN',
          isActive: true
        }
      });
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: ${adminUser.email}`);
    } catch (error) {
      console.log(`‚ÑπÔ∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞: ${error.message}`);
    }

    console.log('üéâ –†—É—á–Ω–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä—É—á–Ω–æ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await prisma.$disconnect();
    console.log('üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ');
  }
}

main();