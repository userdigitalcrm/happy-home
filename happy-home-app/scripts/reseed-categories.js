const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function seedCategories() {
  console.log('üå± Seeding categories...');

  try {
    // Create categories sequentially to avoid connection pool issues
    const categoryData = [
      { name: '1 –ö–æ–º', description: '1-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞' },
      { name: '2 –ö–æ–º', description: '2-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞' },
      { name: '3 –ö–æ–º', description: '3-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞' },
      { name: '4 –ö–æ–º', description: '4-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞' },
      { name: '5 –ö–æ–º', description: '5-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞' },
      { name: '6 –ö–æ–º', description: '6-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞' },
      { name: '–†–ò–≠–õ–¢–û–†', description: '–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å' }
    ];
    
    const categories = [];
    
    for (const data of categoryData) {
      try {
        const category = await prisma.category.upsert({
          where: { name: data.name },
          update: {},
          create: { 
            name: data.name, 
            description: data.description 
          }
        });
        
        categories.push(category);
        console.log(`‚úÖ Created/updated category: ${data.name}`);
      } catch (error) {
        console.error(`‚ùå Error creating category ${data.name}:`, error.message);
      }
    }

    console.log(`‚úÖ Successfully processed ${categories.length} categories`);

  } catch (error) {
    console.error('‚ùå Error seeding categories:', error);
  } finally {
    await prisma.$disconnect();
  }
}

seedCategories();